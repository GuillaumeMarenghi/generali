[{"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\index.js":"1","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\App.js":"2","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\reportWebVitals.js":"3","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\main\\index.js":"4","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide3\\index.js":"5","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide1\\index.js":"6","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide2\\index.js":"7","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide4\\index.js":"8","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide3\\alternate.js":"9"},{"size":544,"mtime":1611219673656,"results":"10","hashOfConfig":"11"},{"size":528,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1909,"mtime":1615406312689,"results":"14","hashOfConfig":"11"},{"size":4754,"mtime":1611587380768,"results":"15","hashOfConfig":"11"},{"size":1578,"mtime":1611321396450,"results":"16","hashOfConfig":"11"},{"size":4404,"mtime":1611326207426,"results":"17","hashOfConfig":"11"},{"size":1978,"mtime":1615406255235,"results":"18","hashOfConfig":"11"},{"size":5102,"mtime":1611308456226,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"dohuz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\index.js",["44"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Main from '../src/components/main'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["45","46"],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\App.js",[],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\reportWebVitals.js",[],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\main\\index.js",[],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide3\\index.js",["47","48","49","50"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport img from './chienChat.jpg';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  columnContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  divFormCont: {\r\n    textAlign: \"center\"\r\n  },\r\n  formText: {\r\n    fontSize: \"1.2em\",\r\n    fontWeight: \"bold\",\r\n\r\n  },\r\n  img: {\r\n    width: \"50%\"\r\n  },\r\n  smallText: {\r\n    fontSize: \"0.8em\"\r\n  },\r\n  boldText : {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.2em\"\r\n  },\r\n  fisrtC : {\r\n    backgroundColor: \"#e8563c\",\r\n    color: \"#fff\",\r\n  },\r\n  secondC : {\r\n    backgroundColor: \"#c11a16\",\r\n    color: \"#fff\"\r\n  },\r\n  thirdC: {\r\n    backgroundColor: \"#742026\",\r\n    color: \"#fff\"\r\n  }\r\n}));\r\n\r\nexport default function Slide3({info, setInfo}) {\r\n  const classes = useStyles();\r\n\r\n  const formules = [\"Prudente\", \"Rusée\", \"Avisée\"];\r\n  const forfait = [\"30 €\", \"40 €\", \"60 €\"];\r\n  const taux = [{prc:\"60 %\", max: \"1200€\"}, {prc:\"80 %\", max: \"1600€\"}, {prc:\"90 %\", max: \"2000€\"}];\r\n  const capital = [\"200€\", \"400€\", \"600€\"];\r\n  const franchise = [\"0€\", \"20€\", \"60€\"];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} className={classes.columnContainer} >\r\n          <Grid item xs={3} ></Grid >\r\n          {formules.map(elm => <Grid item xs={3} className={classes.divFormCont} ><img src={img} className={classes.img} /><div>Formule</div><div className={classes.formText}>{elm}</div></Grid>)}\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.columnContainer}  className={classes.fisrtC}>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n          <div>Forfait prévention</div>\r\n          <div>(prise en charge des dépense prévisible)</div>\r\n          </Grid >\r\n          {forfait.map(elm => <Grid item xs={3} className={classes.divFormCont}><div className={classes.boldText}>{elm} / an</div></Grid>)}\r\n        </Grid>\r\n        <Grid container item xs={12}><Grid item xs={3} className={classes.divFormCont}>Aucune Franchise</Grid></Grid>\r\n        <Grid container item xs={12} className={classes.columnContainer} className={classes.secondC}>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n          <div>Taux de prise en charge</div>\r\n          <div>(frais médicaux / chirurgicaux)</div>\r\n          </Grid >\r\n          {taux.map(elm => <Grid item xs={3} className={classes.divFormCont}><div className={classes.boldText}>{elm.prc}</div><div className={classes.smallText}>jusqu'à</div><div className={classes.smallText}>{elm.max}</div></Grid>)}\r\n        </Grid>\r\n        <Grid container item xs={12}><Grid item xs={3} className={classes.divFormCont}>Franchise annuelle</Grid>\r\n        {franchise.map(elm => <Grid item xs={3} className={classes.divFormCont}>{elm}</Grid>)}\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.columnContainer} className={classes.thirdC}>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n          <div>Capital Décès</div>\r\n          <div>(si souscrit)</div>\r\n          </Grid >\r\n          {capital.map(elm => <Grid item xs={3} className={classes.divFormCont}><div className={classes.boldText}>{elm}</div></Grid>)}\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.columnContainer} >\r\n        <Grid item xs={3} className={classes.divFormCont}>Cochez la formule de votre choix</Grid>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n          <Checkbox\r\n          checked={info.formule === \"Prudente\" ? true : false}\r\n          onClick={() => setInfo({...info, formule : \"Prudente\"})}\r\n          value=\"Prudente\"\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n        <Checkbox\r\n          checked={info.formule === \"Rusée\" ? true : false}\r\n          onClick={() => setInfo({...info, formule : \"Rusée\"})}\r\n          color=\"primary\"\r\n          value=\"Rusée\"\r\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.divFormCont}>\r\n          <Checkbox\r\n          checked={info.formule === \"Avisée\" ? true : false}\r\n          onClick={() => setInfo({...info, formule : \"Avisée\"})}\r\n          value=\"Avisée\"\r\n          color=\"primary\"\r\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n        />\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide1\\index.js",["51"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport chien from './chien.jpg';\r\nimport chat from './chat.jpg';\r\n\r\nfunction Slide1 ({info, setInfo}) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"container-slide-1\">\r\n        <div className={classes.animal}>Quel type d'animal souhaitez vous assurer ?</div>\r\n        <div className={classes.root}>\r\n          <div className={info.animal === \"chat\" ? classes.brd : \"\"} onClick={() => {setInfo({...info, animal: \"chat\"})}}>\r\n            <Avatar alt=\"chat\" src={chat} className={classes.large}/><div className={classes.animal}>Chat</div>\r\n            </div>\r\n          <div className={info.animal === \"chien\" ? classes.brd : \"\"} onClick={() => {setInfo({...info, animal: \"chien\"})}}>\r\n            <Avatar alt=\"Travis Howard\" src={chien} className={classes.large} /><div className={classes.animal}>Chien</div>\r\n            </div> \r\n            \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    justifyContent: \"center\"\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n    cursor: \"pointer\"\r\n  },\r\n  animal: {\r\n    fontSize: \"2em\",\r\n    textAlign: \"center\"\r\n  },\r\n  brd: {\r\n    border: \" solid 4px #e11c05\",\r\n    borderRadius: \"15px\"\r\n  }\r\n\r\n}));\r\n\r\nexport default Slide1;","C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide2\\index.js",[],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide4\\index.js",["52","53"],"C:\\Users\\GUIGGS\\Desktop\\generali\\form-generali\\src\\components\\slide3\\alternate.js",["54"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  link: {\r\n    margin: theme.spacing(0,0),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(0, 0, 0),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  garContent: {\r\n      marginBottom : \"3em\",\r\n      marginTop : \"1.2em\"\r\n  }\r\n}));\r\n\r\nconst garDescript = [\"Remboursement des frais médicaux\", \"Forfait prévention\", \"Garantie d'assistance\",\"Franchise\",\"Capital décès\"]\r\n\r\nconst tiers = [\r\n  {\r\n    title: 'Prudente',\r\n    price: '60%',\r\n    description: ['30€ par an', 'oui', '0€ par an', '200€'],\r\n    buttonText: 'Choisir',\r\n    buttonVariant: 'outlined',\r\n  },\r\n  {\r\n    title: 'Rusée',\r\n    price: '80%',\r\n    description: [\r\n      '40 € par an',\r\n      'oui',\r\n      '20 € par an',\r\n      '400 €',\r\n    ],\r\n    buttonText: 'Choisir',\r\n    buttonVariant: 'outlined',\r\n  },\r\n  {\r\n    title: 'Avisée',\r\n    price: '90%',\r\n    description: [\r\n      '60 € par an',\r\n      'oui',\r\n      '60 € par an',\r\n      '600 €',\r\n    ],\r\n    buttonText: 'choisir',\r\n    buttonVariant: 'outlined',\r\n  },\r\n];\r\n\r\n\r\nexport default function Pricing({nextPage}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/* Hero unit */}\r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          Les Formules\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n        <Grid item key=\"garantie\" xs={12} sm={6} md={3}>\r\n            <Card>\r\n                <CardHeader\r\n                  title=\"Garantie\"\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent className={classes.garContent}>\r\n                  <ul>\r\n                    {garDescript.map((line) => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n          {tiers.map((tier) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={3}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      {tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /an\r\n                    </Typography>\r\n                  </div>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\" onClick={nextPage}>\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n      {/* Footer */}\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}",["55","56"],{"ruleId":"57","severity":1,"message":"58","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":11},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":62,"column":83,"nodeType":"67","endLine":62,"endColumn":124},{"ruleId":"68","severity":1,"message":"69","line":64,"column":75,"nodeType":"70","endLine":64,"endColumn":101},{"ruleId":"68","severity":1,"message":"69","line":72,"column":74,"nodeType":"70","endLine":72,"endColumn":101},{"ruleId":"68","severity":1,"message":"69","line":82,"column":74,"nodeType":"70","endLine":82,"endColumn":100},{"ruleId":"57","severity":1,"message":"71","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"72","line":8,"column":12,"nodeType":"59","messageId":"60","endLine":8,"endColumn":18},{"ruleId":"57","severity":1,"message":"73","line":8,"column":20,"nodeType":"59","messageId":"60","endLine":8,"endColumn":29},{"ruleId":"57","severity":1,"message":"74","line":10,"column":8,"nodeType":"59","messageId":"60","endLine":10,"endColumn":12},{"ruleId":"61","replacedBy":"75"},{"ruleId":"63","replacedBy":"76"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'client' is assigned a value but never used.","'setClient' is assigned a value but never used.","'Link' is defined but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]